package com.byarchitect.operator.data.model

enum class ProcessLabel(val label: String, val isNumber: Boolean) {
    PID("PID", true),
    PPID("PPID", true),
    PGID("PGID", true),
    ARGS("ARGS", false),
    CMDLINE("CMDLINE", false),
    CMD("CMD", false),
    COMM("COMM", false),
    COMMAND("COMMAND", false),
    NAME("NAME", false),
    S("S", false),
    SCH("SCH", false),
    STAT("STAT", false),
    CPU_PERCENTAGE("%CPU", true),
    MEM_PERCENTAGE("%MEM", true),
    VSZ_PERCENTAGE("%VSZ", true),
    ADDR("ADDR", false),
    BIT("BIT", true),
    C("C", true),
    CPU("CPU", true),
    DIO("DIO", true),
    DREAD("DREAD", true),
    DWRITE("DWRITE", true),
    ELAPSED("ELAPSED", false),
    F("F", true),
    GID("GID", true),
    GROUP("GROUP", false),
    IO("IO", false),
    LABEL("LABEL", false),
    MAJFL("MAJFL", true),
    MINFL("MINFL", true),
    NI("NI", true),
    PCY("PCY", false),
    PR("PR", true),
    PRI("PRI", true),
    PSR("PSR", true),
    READ("READ", true),
    RES("RES", true),
    RGID("RGID", true),
    RGROUP("RGROUP", false),
    RSS("RSS", true),
    RTPRIO("RTPRIO", true),
    RUID("RUID", true),
    RUSER("RUSER", false),
    SHR("SHR", true),
    STIME("STIME", false),
    SWAP("SWAP", true),
    SZ("SZ", true),
    TCNT("TCNT", true),
    TID("TID", true),
    TIME("TIME", false),
    TIME_PLUS("TIME+", false),
    TTY("TTY", false),
    UID("UID", true),
    USER("USER", false),
    VIRT("VIRT", true),
    VSZ("VSZ", true),
    WCHAN("WCHAN", false),
    WRITE("WRITE", true);

    companion object {
        fun default(): List<ProcessLabel> {
            return listOf(
                ProcessLabel.PID,
                ProcessLabel.NAME,
                ProcessLabel.CPU_PERCENTAGE,
                ProcessLabel.MEM_PERCENTAGE,
            )
        }
    }
}